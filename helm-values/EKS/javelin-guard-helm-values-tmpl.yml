fullnameOverride: "javelin-guard"

livenessProbe:
  httpGet:
    path: /v1/internal/guard/health
    port: 8013
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 2

readinessProbe:
  httpGet:
    path: /v1/internal/guard/health
    port: 8013
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 2

nodeSelector:
  kube/nodegroup: "gpu"

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

podDisruptionBudget:
  enabled: true
  minAvailable: 1

service:
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /v1/internal/guard/health
  type: NodePort
  protocol: TCP
  port: 8013

image:
  repository: "${DOCKER_IMAGE}"
  pullPolicy: Always
  tag: ${IMAGE_TAG}

imagePullSecrets:
  - name: javelin-registry-secret

resources:
  requests:
    memory: 10Gi
    cpu: 3000m
  limits:
    memory: 14Gi
    cpu: 3500m

ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/group.order: '2'
    alb.ingress.kubernetes.io/load-balancer-attributes: "idle_timeout.timeout_seconds=300"

    alb.ingress.kubernetes.io/load-balancer-name: ${K8S_CLUSTER_NAME}-alb-ingress
    alb.ingress.kubernetes.io/group.name: ${K8S_CLUSTER_NAME}-group
    alb.ingress.kubernetes.io/subnets: ${PUBLIC_SUBNET_IDS}
    alb.ingress.kubernetes.io/certificate-arn: ${ACM_CERTIFICATE_ARN}
    alb.ingress.kubernetes.io/security-groups: ${ALB_SECURITY_GROUP_IDS}
  hosts:
    - host: model.api-dev.example.com
      paths:
        - path: /v1/internal/guard/
          pathType: Prefix