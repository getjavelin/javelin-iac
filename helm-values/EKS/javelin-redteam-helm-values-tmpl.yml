autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

podDisruptionBudget:
  enabled: true
  minAvailable: 1

service:
  type: ClusterIP
  protocol: TCP
  port: 8001

image:
  repository: "${DOCKER_IMAGE}"
  pullPolicy: Always
  tag: ${IMAGE_TAG}

imagePullSecrets:
  - name: javelin-registry-secret

resources:
  requests:
    memory: 512Mi
    cpu: 100m
  limits:
    memory: 1024Mi
    cpu: 500m

secrets:
  enabled: true
  secretData:
    # Please refer https://github.com/getjavelin/javelin-iac/blob/main/docs/service-vars.md

# volumes:
#   - name: redis-cert-volume
#     secret:
#       secretName: javelin-redteam-redis-cert
#       optional: false

# volumeMounts:
#   - name: redis-cert-volume
#     mountPath: "/app/certs/redis-ca.pem"
#     readOnly: true
#     subPath: redis-ca.pem

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kube/nodegroup
          operator: In
          values:
          - general

worker:
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 6
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  resources:
    requests:
      memory: 512Mi
      cpu: 500m
    limits:
      memory: 1024Mi
      cpu: 1000m

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kube/nodegroup
            operator: In
            values:
            - general

seederJob:
  enabled: true

  resources:
    requests:
      memory: 1Gi
      cpu: 2000m
    limits:
      memory: 2Gi
      cpu: 3000m
